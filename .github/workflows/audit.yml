# name: ci

# on:
#   push:
#     branches: [ci]
#   pull_request:
#     branches: [ci]

# jobs:
#   ci:
#     runs-on: ubuntu-22.04
#     steps:
#     - uses: actions/checkout@v2

#     - name: Set up Go
#       uses: actions/setup-go@v2
#       with:
#         go-version: 1.21

#     - name: Verify dependencies
#       run: find -name go.mod -execdir go mod verify \;

        

#     # - name: Run go vet
#     #   run: go vet ./...

#     # - name: Install staticcheck
#     #   run: go install honnef.co/go/tools/cmd/staticcheck@latest

#     # - name: Run staticcheck
#     #   run: staticcheck ./...

#     - name: Install golint
#       run: go install golang.org/x/lint/golint@latest

#     - name: Run golint
#       run: find -name go.mod -execdir golint ./... \;

#   prepare_ssh:
#     before_script:
#       - "command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )"
#       - eval $(ssh-agent -s)
#       - echo "$SSH_KEY_REMOTE_VM" | ssh-add -
  
#       - mkdir -p ~/.ssh
#       - chmod 700 ~/.ssh
#       - ssh-keyscan -t rsa 212.233.72.6 >> ~/.ssh/known_hosts
  
  
#   deploy:
#     extends: .prepare_ssh
#     image: docker
#     services:
#       - docker:dind
#     stage: deploy
#     script:
#       - ssh centos@212.233.72.6 'cd ./hw_10; sudo docker-compose -f ./docker-compose.yml down; sudo git pull origin main; nohup sudo ./start.sh > /dev/null 2>&1 &'
  
#     environment:
#       name: production
#       url: http://212.233.72.6
#     only:
#       - main


name: audit
on:
  push:
    branches: [ci]

jobs:
  versions:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.21

  #   - name: Verify dependencies
  #     run: find -name go.mod -execdir go mod verify \;

  # linter:
  #   runs-on: ubuntu-latest
  #   container: golang
    
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Install golint
  #       run: go install golang.org/x/lint/golint@latest

  #     - name: Run golint
  #       run: find -name go.mod -execdir golint ./... \;
  # # # test:
  # # #   runs-on: ubuntu-latest
  # # #   container: golang

  # # #   steps:
  # # #     - uses: actions/checkout@v3

  # # #     - name: Run tests
  # # #       env:
  # # #         GOFLAGS: -buildvcs=false
  # # #       run: make coverage

  # build:
  #   needs: [linter]
  
  #   runs-on: ubuntu-latest
  #   container: golang

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Build
  #       env:
  #         GOOS: linux
  #         GOARCH: amd64
  #         CGO_ENABLED: 0
  #       run: make build

  deploy:
    needs: [versions]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: check
        run: ls

      - name: Push build data
        uses: appleboy/scp-action@v0.1.4
        with:
          host: prinesy-poday.ru
          username: ubuntu
          overwrite: true
          key: ${{ secrets.SECRET_KEY }}
          source: "test"
          target: /home/ubuntu/testCI
      # build/*, docker-compose.yml, Dockerfile
      - name: Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: prinesy-poday.ru
          username: ubuntu
          key: ${{ secrets.SECRET_KEY }}
          script: ls #cd /home/centos/deploy/backend && ./deploy.sh
  