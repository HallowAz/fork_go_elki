version: "3.5"

volumes:
    prometheus_data: {}

services:
  test_postgres:
    image: "postgres:latest"
    container_name: test_postgres
    ports:
      - "13081:5432"
    volumes:
      - ./dev/SQL:/docker-entrypoint-initdb.d/
      - ./dev/log:/var/log/
    environment:
      POSTGRES_USER: uliana
      POSTGRES_DB: prinesy-poday
      POSTGRES_PASSWORD: uliana
    networks:
      - mynetwork

  redis-session:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - mynetwork
  app:
    build: .
    container_name: app
    restart: always
    depends_on: 
      - test_postgres
    ports:
      - "8080:8080"
    networks:
      - mynetwork

  auth_mvs:
    build: 
      context: ./AuthService/
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - redis-session
    ports:
      - "8081:8081"
    networks:
      - mynetwork

  product_mvs:
    build: 
      context: ./ProductService/
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - test_postgres
    ports:
      - "8082:8082"
    networks:
      - mynetwork

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 8090:8090
    restart: always
    networks:
      - mynetwork

networks:
  mynetwork:
  default:
    external:
      name: mynetwork